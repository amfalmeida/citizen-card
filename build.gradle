
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBoot}")
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.webjars:webjars-locator-core")
    compile("org.webjars:sockjs-client:1.+")
    compile("org.webjars:stomp-websocket:2.+")
    compile("org.webjars:bootstrap:4.+")
    compile("org.webjars:jquery:3.+")

    compile files("libs/pteidlibj.jar")

    testCompile("org.springframework.boot:spring-boot-starter-test")

    //compile("com.github.jai-imageio:jai-imageio-jpeg2000:1.3.0")
}

bootJar {
    launchScript()
    baseName = "${name}"
    version =  "${version}"
    exclude "**/*.properties"
    exclude "**/service.conf"
    bootRun.systemProperties "java.library.path" : file("./libs")
}

task dist() {
    delete 'build/dist'
    copy {
        from jar
        into 'build/dist/'
    }
    copy {
        from 'src/main/resources/service.conf'
        into 'build/dist/'
        rename 'service', project.name + '-' + project.version
    }
    copy {
        from 'src/main/resources/citizen-card.service'
        into 'build/dist/'
        filter {
            it
                .replaceAll('@project.name@', distName)
                .replaceAll('@project.description@', distDescription)
                .replaceAll('@projectName@', project.name)
                .replaceAll('@projectVersion@', project.version)
        }
    }
    copy {
        from 'src/main/resources/config'
        into 'build/dist/config'
    }
    copy {
        from 'src/main/dist'
        into 'build/dist/'
        filter {
            it
                .replaceAll('@project.id@', distId)
                .replaceAll('@project.name@', distName)
                .replaceAll('@project.description@', distDescription)
                .replaceAll('@projectName@', project.name)
                .replaceAll('@projectVersion@', project.version)
        }
        rename 'service', project.name + '-' + project.version
    }
}
dist.dependsOn build
